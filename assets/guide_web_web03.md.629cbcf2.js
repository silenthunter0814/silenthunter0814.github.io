import{_ as s,o as a,c as n,S as l}from"./chunks/framework.0c55f2c5.js";const h=JSON.parse('{"title":"web03 DOM 启示录","description":"DOM 文档对象模型。jaascript 课程课件，学习笔记。","frontmatter":{"description":"DOM 文档对象模型。jaascript 课程课件，学习笔记。","author":"silenthunter0814, Silent Hunter"},"headers":[],"relativePath":"guide/web/web03.md","filePath":"guide/web/web03.md","lastUpdated":1691567329000}'),e={name:"guide/web/web03.md"},o=l(`<h1 id="web03-dom-启示录" tabindex="-1">web03 DOM 启示录 <a class="header-anchor" href="#web03-dom-启示录" aria-label="Permalink to &quot;web03 DOM 启示录&quot;">​</a></h1><p>参考书: <a href="http://domenlightenment.com/" target="_blank" rel="noreferrer">DOM Enlightenment</a> 作者：Cody Lindley</p><h2 id="_1-节点概述" tabindex="-1">1 节点概述 <a class="header-anchor" href="#_1-节点概述" aria-label="Permalink to &quot;1 节点概述&quot;">​</a></h2><h3 id="_1-1-dom-文档对象模型" tabindex="-1">1.1 DOM 文档对象模型 <a class="header-anchor" href="#_1-1-dom-文档对象模型" aria-label="Permalink to &quot;1.1 DOM 文档对象模型&quot;">​</a></h3><p>Document Object Model, 浏览器加载 HTML 文件并解析创建一个树形内存数据结构，这被称作文档对象模型。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;!</span><span style="color:#F07178;">DOCTYPE</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">en-US</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">DOM Enlightenment</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./main.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>DOM:</p><ul><li>document <ul><li>html <ul><li>head <ul><li>title</li></ul></li><li>body <ul><li>script</li></ul></li></ul></li></ul></li></ul><p>DOM 的目的是提供一个编程接口，用于使用 JavaScript 编写此实时文档的脚本（删除、添加、替换、事件处理、修改）。</p><h3 id="_1-2-节点对象类型" tabindex="-1">1.2 节点对象类型 <a class="header-anchor" href="#_1-2-节点对象类型" aria-label="Permalink to &quot;1.2 节点对象类型&quot;">​</a></h3><p>最常见节点类型:</p><ul><li>DOCUMENT_NODE (<code>window.document</code>)</li><li>ELEMENT_NODE (<code>&lt;body&gt;, &lt;a&gt;, &lt;p&gt;, &lt;script&gt;, &lt;style&gt;, &lt;html&gt;, &lt;h1&gt;...</code>)</li><li>ATTRIBUTE_NODE (<code>class=&quot;funEgges&quot;</code>)</li><li>TEXT_NODE (html 文档中的文本字符，包括回车符和空格)</li><li>DOCUMENT_FRAGMENT_NODE (<code>document.createDocumentFragment()</code>)</li><li>DOCUMENT_TYPE_NODE (<code>&lt;!DOCTYPE html&gt;</code>)</li></ul><p>这些节点属性是常量值，用于存储映射到特定类型的节点对象的数字代码值。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> key </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> Node) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Node</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_1-3-子节点对象继承自node对象" tabindex="-1">1.3 子节点对象继承自Node对象 <a class="header-anchor" href="#_1-3-子节点对象继承自node对象" aria-label="Permalink to &quot;1.3 子节点对象继承自Node对象&quot;">​</a></h3><p>典型 DOM 树中的每个节点对象都继承 Node 的属性和方法。</p><ul><li>HTML*Element &gt; HTMLElement &gt; Element &gt; Node &gt; EventTarget &gt; Object</li><li>Text &gt; CharacterData &gt; Node &gt; EventTarget &gt; Object</li><li>HTMLDocument &gt; Document &gt; Node &gt; EventTarget &gt; Object</li><li>DocumentFragment &gt; Node &gt; EventTarget &gt; Object</li></ul><p>例如，所有 HTMLAnchorElement 节点都从 HTMLElement、Element、Node 和 Object 对象继承属性和方法。</p><p>NOTE: Node只是一个 JavaScript 构造函数。因此逻辑上Node继承自Object.prototype就像 JavaScript 中的所有对象一样。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> anchor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> props </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> key </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> anchor)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">   </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(props</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sort</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dir</span><span style="color:#A6ACCD;">(anchor)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_2-文档节点" tabindex="-1">2 文档节点 <a class="header-anchor" href="#_2-文档节点" aria-label="Permalink to &quot;2 文档节点&quot;">​</a></h2><h2 id="_3-元素节点" tabindex="-1">3 元素节点 <a class="header-anchor" href="#_3-元素节点" aria-label="Permalink to &quot;3 元素节点&quot;">​</a></h2><h2 id="_4-元素节点选择" tabindex="-1">4 元素节点选择 <a class="header-anchor" href="#_4-元素节点选择" aria-label="Permalink to &quot;4 元素节点选择&quot;">​</a></h2><h2 id="_5-元素节点几何和滚动几何" tabindex="-1">5 元素节点几何和滚动几何 <a class="header-anchor" href="#_5-元素节点几何和滚动几何" aria-label="Permalink to &quot;5 元素节点几何和滚动几何&quot;">​</a></h2><h2 id="_6-元素节点内联样式" tabindex="-1">6 元素节点内联样式 <a class="header-anchor" href="#_6-元素节点内联样式" aria-label="Permalink to &quot;6 元素节点内联样式&quot;">​</a></h2><h2 id="_7-文本节点" tabindex="-1">7 文本节点 <a class="header-anchor" href="#_7-文本节点" aria-label="Permalink to &quot;7 文本节点&quot;">​</a></h2><h2 id="_8-documentfragment-节点" tabindex="-1">8 DocumentFragment 节点 <a class="header-anchor" href="#_8-documentfragment-节点" aria-label="Permalink to &quot;8 DocumentFragment 节点&quot;">​</a></h2><h2 id="_9-css-样式表和-css-规则" tabindex="-1">9 CSS 样式表和 CSS 规则 <a class="header-anchor" href="#_9-css-样式表和-css-规则" aria-label="Permalink to &quot;9 CSS 样式表和 CSS 规则&quot;">​</a></h2><h2 id="_10-dom-中的-javascript" tabindex="-1">10 DOM 中的 JavaScript <a class="header-anchor" href="#_10-dom-中的-javascript" aria-label="Permalink to &quot;10  DOM 中的 JavaScript&quot;">​</a></h2><h2 id="_11-dom-事件" tabindex="-1">11 DOM 事件 <a class="header-anchor" href="#_11-dom-事件" aria-label="Permalink to &quot;11 DOM 事件&quot;">​</a></h2><h2 id="_12-创建-dom-js-一个受-jquery-启发的现代浏览器-dom-库" tabindex="-1">12 创建 dom.js - 一个受 jQuery 启发的现代浏览器 DOM 库 <a class="header-anchor" href="#_12-创建-dom-js-一个受-jquery-启发的现代浏览器-dom-库" aria-label="Permalink to &quot;12 创建 dom.js - 一个受 jQuery 启发的现代浏览器 DOM 库&quot;">​</a></h2><h2 id="end" tabindex="-1">END <a class="header-anchor" href="#end" aria-label="Permalink to &quot;END&quot;">​</a></h2>`,32),p=[o];function t(r,c,i,D,d,F){return a(),n("div",null,p)}const u=s(e,[["render",t]]);export{h as __pageData,u as default};
