import{_,c as i,x as a,a as l,C as t,z as e,N as u,D as r,o as c}from"./chunks/framework.a68a2679.js";const B=JSON.parse('{"title":"czh01 C语言快速入门","description":"","frontmatter":{},"headers":[],"relativePath":"guide/czh01.md","lastUpdated":1681128790000}'),H={name:"guide/czh01.md"},V=u(`<h1 id="czh01-c语言快速入门" tabindex="-1">czh01 C语言快速入门 <a class="header-anchor" href="#czh01-c语言快速入门" aria-label="Permalink to &quot;czh01 C语言快速入门&quot;">​</a></h1><p><strong>学习方法</strong></p><ul><li>coding and parsing</li><li>滚动式学习，通过后续知识的学习复习巩固前面的知识</li><li>通过实践（编程）学习掌握 C 标准，而不是通过学习 C 标准来指导实践（编程）</li></ul><h2 id="资源链接" tabindex="-1">资源链接 <a class="header-anchor" href="#资源链接" aria-label="Permalink to &quot;资源链接&quot;">​</a></h2><ul><li>课程视频</li><li>课程源码 <a href="https://github.com/silenthunter0814/czh01.git" target="_blank" rel="noreferrer">https://github.com/silenthunter0814/czh01.git</a></li></ul><hr><h1 id="c语言快速入门" tabindex="-1">C语言快速入门 <a class="header-anchor" href="#c语言快速入门" aria-label="Permalink to &quot;C语言快速入门&quot;">​</a></h1><p>Author: Silent Hunter<br> | <a href="#_1-hello-world">c1</a> | <a href="#_2-数据类型-变量-运算符-表达式和语句">c2</a> | <a href="#_3-控制流-flow-control">c3</a> | <a href="#">c4</a> | <a href="#">c5</a> | <a href="#">c6</a> | <a href="#">c7</a> | <a href="#">c8</a> | <a href="#">c9</a> | <a href="#">c10</a> | <a href="#">c11</a> | <a href="#">c12</a> |</p><h2 id="_1-hello-world" tabindex="-1">1 hello world <a class="header-anchor" href="#_1-hello-world" aria-label="Permalink to &quot;1 hello world&quot;">​</a></h2><ul><li><a href="#_1-1-hello-c">1.1 hello.c</a></li><li><a href="#_1-2-预处理-编译-汇编-链接和运行">1.2 预处理，编译，汇编，链接和运行</a></li><li><a href="#_1-3-文件格式-进程地址空间">1.3 文件格式，进程地址空间</a></li></ul><h3 id="_1-1-hello-c" tabindex="-1">1.1 hello.c <a class="header-anchor" href="#_1-1-hello-c" aria-label="Permalink to &quot;1.1 hello.c&quot;">​</a></h3><p>vi/vscode 编辑器编写第一个程序 <code>hello.c</code>:</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">   #include </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">   </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">5</span><span style="color:#F07178;">       </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello, world</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F78C6C;">6</span><span style="color:#F07178;">       </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">7</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>第 1 行：以 <code>#</code> 开头的行都由预处理器处理，预处理器将 <code>stdio.h</code> 文件的内容复制到我们的文件中。<code>xxx.h</code> 文件称为预处理头文件，通常包含函数声明。 <code>stdio.h</code> 文件中包含函数 <code>printf(...)</code>的声明。</li><li>第 3 行： <code>main</code> 函数，程序开始执行的入口点。<code>int</code> 表示 <code>main()</code> 的返回类型。<code>()</code> 表示 <code>main</code> 函数不带任何参数。</li><li>第 4 和 7 行：<code>{</code> 和 <code>}</code> 一对大括号定义了函数体，也叫做复合语句块。所有函数都必须以大括号开头和结尾。</li><li>第 5 行： <code>printf()</code> 是一个标准库函数，用于在标准输出上打印一些东西。末尾的 <code>;</code> 用来表示语句的结束。</li><li>第 6 行： <code>return 0;</code>, 返回语句，值 0 通常表示成功终止。</li></ul><h3 id="_1-2-预处理-编译-汇编-链接和运行" tabindex="-1">1.2 预处理，编译，汇编，链接和运行 <a class="header-anchor" href="#_1-2-预处理-编译-汇编-链接和运行" aria-label="Permalink to &quot;1.2 预处理，编译，汇编，链接和运行&quot;">​</a></h3><h4 id="gcc-编译器集合" tabindex="-1">gcc 编译器集合 <a class="header-anchor" href="#gcc-编译器集合" aria-label="Permalink to &quot;gcc 编译器集合&quot;">​</a></h4><ul><li>预处理 Preprocess 将 <code>stdio.h</code> 文件的内容复制到 <code>hello.c</code></li><li>编译 Compile 将C语言源文件翻译为汇编语言 <code>hello.c</code> -&gt; <code>hello.asm</code></li><li>汇编 Assembly 由汇编源文件生成机器指令二进制代码 <code>hello.asm</code> -&gt; <code>hello.o</code></li><li>链接 Linking 将二进制对象文件链接成可执行文件 <code>hello.o</code> + <code>printf.o</code> =&gt; <code>a.out</code></li></ul><h4 id="终端命令行" tabindex="-1">终端命令行 <a class="header-anchor" href="#终端命令行" aria-label="Permalink to &quot;终端命令行&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gcc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello.c</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;"># create a.out</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./a.out</span></span>
<span class="line"><span style="color:#FFCB6B;">hello,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">world</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span></span></code></pre></div><h3 id="_1-3-文件格式-进程地址空间" tabindex="-1">1.3 文件格式，进程地址空间 <a class="header-anchor" href="#_1-3-文件格式-进程地址空间" aria-label="Permalink to &quot;1.3 文件格式，进程地址空间&quot;">​</a></h3><ul><li><code>ELF</code>可执行文件 <a href="https://en.wikipedia.org/wiki/Executable_and_Linkable_Format" target="_blank" rel="noreferrer">wiki</a><br><code>ELF</code> = <code>ELF header</code> + <code>text section</code> + <code>data section</code></li><li>进程地址空间<br><code>address space</code> = <code>text</code> + <code>data</code> + <code>stack</code><ul><li><code>text</code> 文本段（指令）</li><li><code>data</code> 数据段</li><li><code>stack</code> 栈</li></ul></li></ul><h2 id="_2-数据类型-变量-运算符-表达式和语句" tabindex="-1">2 数据类型，变量，运算符，表达式和语句 <a class="header-anchor" href="#_2-数据类型-变量-运算符-表达式和语句" aria-label="Permalink to &quot;2 数据类型，变量，运算符，表达式和语句&quot;">​</a></h2><h3 id="_2-1-数字系统" tabindex="-1">2.1 数字系统 <a class="header-anchor" href="#_2-1-数字系统" aria-label="Permalink to &quot;2.1 数字系统&quot;">​</a></h3>`,23),L={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"44.427ex",height:"2.185ex",role:"img",focusable:"false",viewBox:"0 -883.9 19636.9 965.9","aria-hidden":"true"},b=a("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[a("g",{"data-mml-node":"math"},[a("g",{"data-mml-node":"mn"},[a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",style:{"stroke-width":"3"}}),a("path",{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z",transform:"translate(500,0)",style:{"stroke-width":"3"}}),a("path",{"data-c":"33",d:"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z",transform:"translate(1000,0)",style:{"stroke-width":"3"}}),a("path",{"data-c":"34",d:"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z",transform:"translate(1500,0)",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mo",transform:"translate(2277.8,0)"},[a("path",{"data-c":"3D",d:"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(3333.6,0)"},[a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mo",transform:"translate(4055.8,0)"},[a("path",{"data-c":"D7",d:"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"msup",transform:"translate(5056,0)"},[a("g",{"data-mml-node":"mn"},[a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",style:{"stroke-width":"3"}}),a("path",{"data-c":"30",d:"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z",transform:"translate(500,0)",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(1033,413) scale(0.707)"},[a("path",{"data-c":"33",d:"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z",style:{"stroke-width":"3"}})])]),a("g",{"data-mml-node":"mo",transform:"translate(6714.8,0)"},[a("path",{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(7715,0)"},[a("path",{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mo",transform:"translate(8437.2,0)"},[a("path",{"data-c":"D7",d:"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"msup",transform:"translate(9437.4,0)"},[a("g",{"data-mml-node":"mn"},[a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",style:{"stroke-width":"3"}}),a("path",{"data-c":"30",d:"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z",transform:"translate(500,0)",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(1033,413) scale(0.707)"},[a("path",{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z",style:{"stroke-width":"3"}})])]),a("g",{"data-mml-node":"mo",transform:"translate(11096.2,0)"},[a("path",{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(12096.4,0)"},[a("path",{"data-c":"33",d:"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mo",transform:"translate(12818.7,0)"},[a("path",{"data-c":"D7",d:"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"msup",transform:"translate(13818.9,0)"},[a("g",{"data-mml-node":"mn"},[a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",style:{"stroke-width":"3"}}),a("path",{"data-c":"30",d:"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z",transform:"translate(500,0)",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(1033,413) scale(0.707)"},[a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",style:{"stroke-width":"3"}})])]),a("g",{"data-mml-node":"mo",transform:"translate(15477.7,0)"},[a("path",{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(16477.9,0)"},[a("path",{"data-c":"34",d:"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mo",transform:"translate(17200.1,0)"},[a("path",{"data-c":"D7",d:"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"msup",transform:"translate(18200.3,0)"},[a("g",{"data-mml-node":"mn"},[a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",style:{"stroke-width":"3"}}),a("path",{"data-c":"30",d:"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z",transform:"translate(500,0)",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(1033,413) scale(0.707)"},[a("path",{"data-c":"30",d:"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z",style:{"stroke-width":"3"}})])])])],-1),y=[b],k=a("li",null,"二进制 0, 1",-1),g={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-3.658ex"},xmlns:"http://www.w3.org/2000/svg",width:"39.902ex",height:"8.448ex",role:"img",focusable:"false",viewBox:"0 -2117 17636.9 3733.9","aria-hidden":"true"},w=a("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[a("g",{"data-mml-node":"math"},[a("g",{"data-mml-node":"mtable"},[a("g",{"data-mml-node":"mtr",transform:"translate(0,1233)"},[a("g",{"data-mml-node":"mtd"},[a("g",{"data-mml-node":"mn"},[a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",style:{"stroke-width":"3"}}),a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",transform:"translate(500,0)",style:{"stroke-width":"3"}}),a("path",{"data-c":"30",d:"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z",transform:"translate(1000,0)",style:{"stroke-width":"3"}}),a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",transform:"translate(1500,0)",style:{"stroke-width":"3"}})])]),a("g",{"data-mml-node":"mtd",transform:"translate(2000,0)"},[a("g",{"data-mml-node":"mi"}),a("g",{"data-mml-node":"mo",transform:"translate(277.8,0)"},[a("path",{"data-c":"3D",d:"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(1333.6,0)"},[a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mo",transform:"translate(2055.8,0)"},[a("path",{"data-c":"D7",d:"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"msup",transform:"translate(3056,0)"},[a("g",{"data-mml-node":"mn"},[a("path",{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(533,413) scale(0.707)"},[a("path",{"data-c":"33",d:"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z",style:{"stroke-width":"3"}})])]),a("g",{"data-mml-node":"mo",transform:"translate(4214.8,0)"},[a("path",{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(5215,0)"},[a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mo",transform:"translate(5937.2,0)"},[a("path",{"data-c":"D7",d:"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"msup",transform:"translate(6937.4,0)"},[a("g",{"data-mml-node":"mn"},[a("path",{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(533,413) scale(0.707)"},[a("path",{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z",style:{"stroke-width":"3"}})])]),a("g",{"data-mml-node":"mo",transform:"translate(8096.2,0)"},[a("path",{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(9096.4,0)"},[a("path",{"data-c":"30",d:"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mo",transform:"translate(9818.7,0)"},[a("path",{"data-c":"D7",d:"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"msup",transform:"translate(10818.9,0)"},[a("g",{"data-mml-node":"mn"},[a("path",{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(533,413) scale(0.707)"},[a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",style:{"stroke-width":"3"}})])]),a("g",{"data-mml-node":"mo",transform:"translate(11977.7,0)"},[a("path",{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(12977.9,0)"},[a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mo",transform:"translate(13700.1,0)"},[a("path",{"data-c":"D7",d:"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"msup",transform:"translate(14700.3,0)"},[a("g",{"data-mml-node":"mn"},[a("path",{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(533,413) scale(0.707)"},[a("path",{"data-c":"30",d:"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z",style:{"stroke-width":"3"}})])])])]),a("g",{"data-mml-node":"mtr",transform:"translate(0,-67)"},[a("g",{"data-mml-node":"mtd",transform:"translate(2000,0)"}),a("g",{"data-mml-node":"mtd",transform:"translate(2000,0)"},[a("g",{"data-mml-node":"mi"}),a("g",{"data-mml-node":"mo",transform:"translate(277.8,0)"},[a("path",{"data-c":"3D",d:"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(1333.6,0)"},[a("path",{"data-c":"38",d:"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mo",transform:"translate(2055.8,0)"},[a("path",{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(3056,0)"},[a("path",{"data-c":"34",d:"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mo",transform:"translate(3778.2,0)"},[a("path",{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(4778.4,0)"},[a("path",{"data-c":"30",d:"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mo",transform:"translate(5500.7,0)"},[a("path",{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(6500.9,0)"},[a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",style:{"stroke-width":"3"}})])])]),a("g",{"data-mml-node":"mtr",transform:"translate(0,-1367)"},[a("g",{"data-mml-node":"mtd",transform:"translate(2000,0)"}),a("g",{"data-mml-node":"mtd",transform:"translate(2000,0)"},[a("g",{"data-mml-node":"mi"}),a("g",{"data-mml-node":"mo",transform:"translate(277.8,0)"},[a("path",{"data-c":"3D",d:"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z",style:{"stroke-width":"3"}})]),a("g",{"data-mml-node":"mn",transform:"translate(1333.6,0)"},[a("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z",style:{"stroke-width":"3"}}),a("path",{"data-c":"33",d:"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z",transform:"translate(500,0)",style:{"stroke-width":"3"}})])])])])])],-1),x=[w],q=u('<h3 id="_2-1-数据类型-data-type" tabindex="-1">2.1 数据类型 - data type <a class="header-anchor" href="#_2-1-数据类型-data-type" aria-label="Permalink to &quot;2.1 数据类型 - data type&quot;">​</a></h3><h3 id="_2-2-变量-variable" tabindex="-1">2.2 变量 - variable <a class="header-anchor" href="#_2-2-变量-variable" aria-label="Permalink to &quot;2.2 变量 - variable&quot;">​</a></h3><h3 id="_2-2-语句-statement" tabindex="-1">2.2 语句 - statement <a class="header-anchor" href="#_2-2-语句-statement" aria-label="Permalink to &quot;2.2 语句 - statement&quot;">​</a></h3><h3 id="_2-4-小结" tabindex="-1">2.4 小结 <a class="header-anchor" href="#_2-4-小结" aria-label="Permalink to &quot;2.4 小结&quot;">​</a></h3><p>变量声明/定义 - declaration and definition 格式化输出转换函数 - printf 变量初始化 - initialization</p><h3 id="_2-5-运算符和表达式-operator-and-expression" tabindex="-1">2.5 运算符和表达式 - operator and expression <a class="header-anchor" href="#_2-5-运算符和表达式-operator-and-expression" aria-label="Permalink to &quot;2.5 运算符和表达式 - operator and expression&quot;">​</a></h3><p>!, &amp; 一元运算符 - unary 小结</p><h3 id="_2-6-编程练习" tabindex="-1">2.6 编程练习 <a class="header-anchor" href="#_2-6-编程练习" aria-label="Permalink to &quot;2.6 编程练习&quot;">​</a></h3><p>数据类型大小 两整数之和 圆的面积</p><h2 id="_3-控制流-flow-control" tabindex="-1">3 控制流 - flow control <a class="header-anchor" href="#_3-控制流-flow-control" aria-label="Permalink to &quot;3 控制流 - flow control&quot;">​</a></h2><h3 id="_3-1-if-else" tabindex="-1">3.1 if-else <a class="header-anchor" href="#_3-1-if-else" aria-label="Permalink to &quot;3.1 if-else&quot;">​</a></h3><h3 id="_3-2-else-if" tabindex="-1">3.2 else-if <a class="header-anchor" href="#_3-2-else-if" aria-label="Permalink to &quot;3.2 else-if&quot;">​</a></h3><h3 id="_3-3-while-loop-and-for-loop" tabindex="-1">3.3 while loop and for loop <a class="header-anchor" href="#_3-3-while-loop-and-for-loop" aria-label="Permalink to &quot;3.3 while loop and for loop&quot;">​</a></h3><h3 id="_3-4-编程练习" tabindex="-1">3.4 编程练习 <a class="header-anchor" href="#_3-4-编程练习" aria-label="Permalink to &quot;3.4 编程练习&quot;">​</a></h3><p>the Sum of Natural Numbers reverse integer palindrome perfect number print stars</p><h2 id="_4-函数-function" tabindex="-1">4 函数 - function <a class="header-anchor" href="#_4-函数-function" aria-label="Permalink to &quot;4 函数 - function&quot;">​</a></h2><h3 id="_4-1-函数概念" tabindex="-1">4.1 函数概念 <a class="header-anchor" href="#_4-1-函数概念" aria-label="Permalink to &quot;4.1 函数概念&quot;">​</a></h3><h3 id="_4-2-参数传递" tabindex="-1">4.2 参数传递 <a class="header-anchor" href="#_4-2-参数传递" aria-label="Permalink to &quot;4.2 参数传递&quot;">​</a></h3><h3 id="_4-3-递归函数-recursion" tabindex="-1">4.3 递归函数 - recursion <a class="header-anchor" href="#_4-3-递归函数-recursion" aria-label="Permalink to &quot;4.3 递归函数 - recursion&quot;">​</a></h3><h2 id="_5-指针与数组-pointer-and-array" tabindex="-1">5 指针与数组 - pointer and array <a class="header-anchor" href="#_5-指针与数组-pointer-and-array" aria-label="Permalink to &quot;5 指针与数组 - pointer and array&quot;">​</a></h2><h3 id="_5-1-指针-pointer" tabindex="-1">5.1 指针 - pointer <a class="header-anchor" href="#_5-1-指针-pointer" aria-label="Permalink to &quot;5.1 指针 - pointer&quot;">​</a></h3><h3 id="_5-2-数组-array" tabindex="-1">5.2 数组 - array <a class="header-anchor" href="#_5-2-数组-array" aria-label="Permalink to &quot;5.2 数组 - array&quot;">​</a></h3><p>数组声明和初始化 数组访问</p><h3 id="_5-3-指针与数组" tabindex="-1">5.3 指针与数组 <a class="header-anchor" href="#_5-3-指针与数组" aria-label="Permalink to &quot;5.3 指针与数组&quot;">​</a></h3><h3 id="_5-4-编程练习" tabindex="-1">5.4 编程练习 <a class="header-anchor" href="#_5-4-编程练习" aria-label="Permalink to &quot;5.4 编程练习&quot;">​</a></h3><p>printarray - 打印数组 findelem - 查找数组元素 maxofa - 数组的最大值 average - 数组的平均值 insert sort - 插入排序 binsearch - 二分查找 (sorted array)</p><h2 id="_6-常量-字符串-字符数组" tabindex="-1">6 常量，字符串，字符数组 <a class="header-anchor" href="#_6-常量-字符串-字符数组" aria-label="Permalink to &quot;6 常量，字符串，字符数组&quot;">​</a></h2><h3 id="_6-1-数字常量-字符常量" tabindex="-1">6.1 数字常量，字符常量 <a class="header-anchor" href="#_6-1-数字常量-字符常量" aria-label="Permalink to &quot;6.1 数字常量，字符常量&quot;">​</a></h3><h3 id="_6-2-字符数组" tabindex="-1">6.2 字符数组 <a class="header-anchor" href="#_6-2-字符数组" aria-label="Permalink to &quot;6.2 字符数组&quot;">​</a></h3><h3 id="_6-3-字符串-string-literal" tabindex="-1">6.3 字符串 - string literal <a class="header-anchor" href="#_6-3-字符串-string-literal" aria-label="Permalink to &quot;6.3 字符串 - string literal&quot;">​</a></h3><h2 id="_7-动态内存分配-malloc-and-free" tabindex="-1">7 动态内存分配 - malloc and free <a class="header-anchor" href="#_7-动态内存分配-malloc-and-free" aria-label="Permalink to &quot;7 动态内存分配 - malloc and free&quot;">​</a></h2><h2 id="_8-局部变量-全局变量-符号表" tabindex="-1">8 局部变量，全局变量，符号表 <a class="header-anchor" href="#_8-局部变量-全局变量-符号表" aria-label="Permalink to &quot;8 局部变量，全局变量，符号表&quot;">​</a></h2><p>local, global, symbol table</p><h3 id="_8-1-局部变量-local-variable" tabindex="-1">8.1 局部变量 - local variable <a class="header-anchor" href="#_8-1-局部变量-local-variable" aria-label="Permalink to &quot;8.1 局部变量 - local variable&quot;">​</a></h3><h3 id="_8-2-全局变量-global-variable" tabindex="-1">8.2 全局变量 - global variable <a class="header-anchor" href="#_8-2-全局变量-global-variable" aria-label="Permalink to &quot;8.2 全局变量 - global variable&quot;">​</a></h3><h3 id="_8-3-符号表-作用域-symbol-table-scope" tabindex="-1">8.3 符号表，作用域 - symbol table, scope <a class="header-anchor" href="#_8-3-符号表-作用域-symbol-table-scope" aria-label="Permalink to &quot;8.3 符号表，作用域 - symbol table, scope&quot;">​</a></h3><h2 id="_9-结构和联合-struct-and-union" tabindex="-1">9 结构和联合 - struct and union <a class="header-anchor" href="#_9-结构和联合-struct-and-union" aria-label="Permalink to &quot;9 结构和联合 - struct and union&quot;">​</a></h2><h3 id="_9-1-结构-struct" tabindex="-1">9.1 结构 - struct <a class="header-anchor" href="#_9-1-结构-struct" aria-label="Permalink to &quot;9.1 结构 - struct&quot;">​</a></h3><p>创建结构，结构变量 结构作为函数的参数 指向结构的指针</p><h3 id="_9-2-联合-union" tabindex="-1">9.2 联合 - union <a class="header-anchor" href="#_9-2-联合-union" aria-label="Permalink to &quot;9.2 联合 - union&quot;">​</a></h3><p>typedef switch 语句 union 示例 数据封装</p><h2 id="_10-链表-link-list" tabindex="-1">10 链表 - link list <a class="header-anchor" href="#_10-链表-link-list" aria-label="Permalink to &quot;10 链表 - link list&quot;">​</a></h2><h3 id="_10-1-自引用结构-self-referential-structure" tabindex="-1">10.1 自引用结构 - self referential structure <a class="header-anchor" href="#_10-1-自引用结构-self-referential-structure" aria-label="Permalink to &quot;10.1 自引用结构 - self referential structure&quot;">​</a></h3><h3 id="_10-2-链表-link-list" tabindex="-1">10.2 链表 - link list <a class="header-anchor" href="#_10-2-链表-link-list" aria-label="Permalink to &quot;10.2 链表 - link list&quot;">​</a></h3><p>创建，打印链表 atolink - 数组转换为链表</p><h2 id="_11-预处理器-preprocessor" tabindex="-1">11 预处理器 - preprocessor <a class="header-anchor" href="#_11-预处理器-preprocessor" aria-label="Permalink to &quot;11 预处理器 - preprocessor&quot;">​</a></h2><h2 id="_12-标准输入-标准输出-错误输出-stdin-stdout-stderr" tabindex="-1">12 标准输入, 标准输出, 错误输出 - stdin, stdout, stderr <a class="header-anchor" href="#_12-标准输入-标准输出-错误输出-stdin-stdout-stderr" aria-label="Permalink to &quot;12 标准输入, 标准输出, 错误输出 - stdin, stdout, stderr&quot;">​</a></h2>',47);function M(Z,C,D,P,F,v){const o=r("mn"),n=r("mo"),s=r("msup"),h=r("math"),m=r("mjx-assistive-mml"),p=r("mjx-container"),d=r("mtd"),Q=r("mi"),T=r("mtr"),f=r("mtable");return c(),i("div",null,[V,a("ul",null,[a("li",null,[l("十进制 0, 1, 2, 3, 4, 5, 6, 7, 8, 9"),t(p,{class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},{default:e(()=>[(c(),i("svg",L,y)),t(m,{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},{default:e(()=>[t(h,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},{default:e(()=>[t(o,null,{default:e(()=>[l("1234")]),_:1}),t(n,null,{default:e(()=>[l("=")]),_:1}),t(o,null,{default:e(()=>[l("1")]),_:1}),t(n,null,{default:e(()=>[l("×")]),_:1}),t(s,null,{default:e(()=>[t(o,null,{default:e(()=>[l("10")]),_:1}),t(o,null,{default:e(()=>[l("3")]),_:1})]),_:1}),t(n,null,{default:e(()=>[l("+")]),_:1}),t(o,null,{default:e(()=>[l("2")]),_:1}),t(n,null,{default:e(()=>[l("×")]),_:1}),t(s,null,{default:e(()=>[t(o,null,{default:e(()=>[l("10")]),_:1}),t(o,null,{default:e(()=>[l("2")]),_:1})]),_:1}),t(n,null,{default:e(()=>[l("+")]),_:1}),t(o,null,{default:e(()=>[l("3")]),_:1}),t(n,null,{default:e(()=>[l("×")]),_:1}),t(s,null,{default:e(()=>[t(o,null,{default:e(()=>[l("10")]),_:1}),t(o,null,{default:e(()=>[l("1")]),_:1})]),_:1}),t(n,null,{default:e(()=>[l("+")]),_:1}),t(o,null,{default:e(()=>[l("4")]),_:1}),t(n,null,{default:e(()=>[l("×")]),_:1}),t(s,null,{default:e(()=>[t(o,null,{default:e(()=>[l("10")]),_:1}),t(o,null,{default:e(()=>[l("0")]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),k]),t(p,{class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},{default:e(()=>[(c(),i("svg",g,x)),t(m,{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},{default:e(()=>[t(h,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},{default:e(()=>[t(f,{displaystyle:"true",columnalign:"right left",columnspacing:"0em",rowspacing:"3pt"},{default:e(()=>[t(T,null,{default:e(()=>[t(d,null,{default:e(()=>[t(o,null,{default:e(()=>[l("1101")]),_:1})]),_:1}),t(d,null,{default:e(()=>[t(Q),t(n,null,{default:e(()=>[l("=")]),_:1}),t(o,null,{default:e(()=>[l("1")]),_:1}),t(n,null,{default:e(()=>[l("×")]),_:1}),t(s,null,{default:e(()=>[t(o,null,{default:e(()=>[l("2")]),_:1}),t(o,null,{default:e(()=>[l("3")]),_:1})]),_:1}),t(n,null,{default:e(()=>[l("+")]),_:1}),t(o,null,{default:e(()=>[l("1")]),_:1}),t(n,null,{default:e(()=>[l("×")]),_:1}),t(s,null,{default:e(()=>[t(o,null,{default:e(()=>[l("2")]),_:1}),t(o,null,{default:e(()=>[l("2")]),_:1})]),_:1}),t(n,null,{default:e(()=>[l("+")]),_:1}),t(o,null,{default:e(()=>[l("0")]),_:1}),t(n,null,{default:e(()=>[l("×")]),_:1}),t(s,null,{default:e(()=>[t(o,null,{default:e(()=>[l("2")]),_:1}),t(o,null,{default:e(()=>[l("1")]),_:1})]),_:1}),t(n,null,{default:e(()=>[l("+")]),_:1}),t(o,null,{default:e(()=>[l("1")]),_:1}),t(n,null,{default:e(()=>[l("×")]),_:1}),t(s,null,{default:e(()=>[t(o,null,{default:e(()=>[l("2")]),_:1}),t(o,null,{default:e(()=>[l("0")]),_:1})]),_:1})]),_:1})]),_:1}),t(T,null,{default:e(()=>[t(d),t(d,null,{default:e(()=>[t(Q),t(n,null,{default:e(()=>[l("=")]),_:1}),t(o,null,{default:e(()=>[l("8")]),_:1}),t(n,null,{default:e(()=>[l("+")]),_:1}),t(o,null,{default:e(()=>[l("4")]),_:1}),t(n,null,{default:e(()=>[l("+")]),_:1}),t(o,null,{default:e(()=>[l("0")]),_:1}),t(n,null,{default:e(()=>[l("+")]),_:1}),t(o,null,{default:e(()=>[l("1")]),_:1})]),_:1})]),_:1}),t(T,null,{default:e(()=>[t(d),t(d,null,{default:e(()=>[t(Q),t(n,null,{default:e(()=>[l("=")]),_:1}),t(o,null,{default:e(()=>[l("13")]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),q])}const z=_(H,[["render",M]]);export{B as __pageData,z as default};
