import{_ as s,o as a,c as l,S as n}from"./chunks/framework.0c55f2c5.js";const y=JSON.parse('{"title":"web02 JavaScript 教程","description":"javascript 开发教程。jaascript 课程课件，学习笔记。","frontmatter":{"description":"javascript 开发教程。jaascript 课程课件，学习笔记。","author":"silenthunter0814, Silent Hunter"},"headers":[],"relativePath":"guide/web/web02.md","filePath":"guide/web/web02.md","lastUpdated":1692147844000}'),e={name:"guide/web/web02.md"},o=n(`<h1 id="web02-javascript-教程" tabindex="-1">web02 JavaScript 教程 <a class="header-anchor" href="#web02-javascript-教程" aria-label="Permalink to &quot;web02 JavaScript 教程&quot;">​</a></h1><p>环境需求</p><ul><li>google chrome 浏览器</li><li>google chrome devtools 开发者工具</li></ul><h2 id="_1-javascript-基础" tabindex="-1">1 JavaScript 基础 <a class="header-anchor" href="#_1-javascript-基础" aria-label="Permalink to &quot;1 JavaScript 基础&quot;">​</a></h2><h3 id="_1-1-hello-world" tabindex="-1">1.1 Hello world <a class="header-anchor" href="#_1-1-hello-world" aria-label="Permalink to &quot;1.1 Hello world&quot;">​</a></h3><p>编写如下 index.html 文件:</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#85E89D;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">html</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello world&quot;</span><span style="color:#E1E4E8;">);    </span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">src</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;./main.js&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#22863A;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line highlighted"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello world&quot;</span><span style="color:#24292E;">);    </span></span>
<span class="line highlighted"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line highlighted"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;./main.js&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>在 chrome 中打开 index.html 文件；打开开发者控制台，可以看到 <code>Hellow world</code> 输出。</p><ul><li>使用 <code>&lt;script&gt;</code> 标签将 JavaScript 程序插入到 HTML 文档中，通常位于 <code>&lt;body&gt;</code> 底部位置。</li><li>内联脚本直接插入 HTML 文档中。</li><li>外联脚本使用 <code>&lt;script src=&quot;pathname&quot;&gt;&lt;/script&gt;</code> 格式，脚本位于外部单独文件中。</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// main.js file</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;It&#39;s my first JavaScript file.&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// main.js file</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;It&#39;s my first JavaScript file.&quot;</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>JavaScript 注释：</p><ul><li><code>//</code> 用于单行注释</li><li><code>/* ... */</code> 用于多行注释，也称为块注释</li></ul><h3 id="_1-2-数据类型" tabindex="-1">1.2 数据类型 <a class="header-anchor" href="#_1-2-数据类型" aria-label="Permalink to &quot;1.2 数据类型&quot;">​</a></h3><p>JavaScript 提供了两大类数据类型：原始类型和对象类型。</p><p>原始类型：</p><ul><li>Numbers 8 字节浮点数</li><li>String 只读字符串</li><li>Boolean 值为 <code>true</code> 或 <code>false</code></li><li>null 值为 空 的对象类型</li><li>undefined</li></ul><h4 id="numbers" tabindex="-1">Numbers <a class="header-anchor" href="#numbers" aria-label="Permalink to &quot;Numbers&quot;">​</a></h4><p>在内部，JavaScript 只有一种数字类型：每个数字都是浮点数。</p><p>数字文字是源代码中表示的数字，根据其编写方式，它可以是整数文字或浮点文字。</p><ul><li>整数： <code>8</code>, <code>353535</code>, <code>0x2a</code></li><li>浮点数: <code>3.14</code>, <code>0.8</code>, <code>1.2e3</code></li></ul><h3 id="string" tabindex="-1">String <a class="header-anchor" href="#string" aria-label="Permalink to &quot;String&quot;">​</a></h3><p>字符串类型是字符序列。 它在源代码中定义为字符串文字，用引号或双引号括起来:</p><ul><li><code>&#39;a string&#39;</code></li><li><code>&quot;another string&quot;</code></li></ul><p>使用反斜杠字符串可以跨越多行</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&quot;a long line \\</span></span>
<span class="line"><span style="color:#e1e4e8;">string&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&quot;a long line \\</span></span>
<span class="line"><span style="color:#24292e;">string&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>字符串可以包含可以在打印字符串时解释的转义序列，例如 \\n 创建新行。 当需要在引号括起来的字符串中输入引号时，反斜杠也很有用，以防止字符被解释为结束引号：</p><ul><li><code>&#39;hello\\n&#39;</code></li><li><code>&#39;I\\&#39;m a coder&#39;</code> 等同于 <code>&quot;I&#39;m a coder&quot;</code></li></ul><h3 id="_1-3-变量-表达式和简单语句" tabindex="-1">1.3 变量，表达式和简单语句 <a class="header-anchor" href="#_1-3-变量-表达式和简单语句" aria-label="Permalink to &quot;1.3 变量，表达式和简单语句&quot;">​</a></h3><h3 id="_1-4-if-else-语句" tabindex="-1">1.4 if else 语句 <a class="header-anchor" href="#_1-4-if-else-语句" aria-label="Permalink to &quot;1.4 if else 语句&quot;">​</a></h3><h3 id="_1-5-while-for-循环语句" tabindex="-1">1.5 while for 循环语句 <a class="header-anchor" href="#_1-5-while-for-循环语句" aria-label="Permalink to &quot;1.5 while for 循环语句&quot;">​</a></h3><h3 id="_1-6-switch-多路选择语句" tabindex="-1">1.6 switch 多路选择语句 <a class="header-anchor" href="#_1-6-switch-多路选择语句" aria-label="Permalink to &quot;1.6 switch 多路选择语句&quot;">​</a></h3><h2 id="_2-function-函数" tabindex="-1">2 Function 函数 <a class="header-anchor" href="#_2-function-函数" aria-label="Permalink to &quot;2 Function 函数&quot;">​</a></h2><h2 id="_3-object-对象" tabindex="-1">3 Object 对象 <a class="header-anchor" href="#_3-object-对象" aria-label="Permalink to &quot;3 Object 对象&quot;">​</a></h2><h2 id="_4-array-数组" tabindex="-1">4 Array 数组 <a class="header-anchor" href="#_4-array-数组" aria-label="Permalink to &quot;4 Array 数组&quot;">​</a></h2>`,34),p=[o];function t(r,c,i,d,h,E){return a(),l("div",null,p)}const b=s(e,[["render",t]]);export{y as __pageData,b as default};
