import{_ as s,c as l,o as e,O as a}from"./chunks/framework.1ff2b322.js";const F=JSON.parse('{"title":"web 入门","description":"","frontmatter":{},"headers":[],"relativePath":"guide/web/web.md","lastUpdated":1682490175000}'),t={name:"guide/web/web.md"},o=a(`<h1 id="web-入门" tabindex="-1">web 入门 <a class="header-anchor" href="#web-入门" aria-label="Permalink to &quot;web 入门&quot;">​</a></h1><p><strong>搭建环境</strong></p><ul><li>软件： google chrome 浏览器</li><li>网站目录结构<br><img src="https://silenthunter0814.github.io/pub/web/site.png" alt=""><ul><li><code>site</code> 网站目录</li><li><code>index.html</code> 网站主页，新建一个 <code>index.html</code> 空文件，位于 <code>site</code> 目录下面。</li><li><code>images</code> 目录，存放图像文件，位于 <code>site</code> 目录下面。</li><li><code>styles</code> 目录，存放设置网页样式的 CSS 代码文件，位于 <code>site</code> 目录下面。</li><li><code>scripts</code> 目录，存放 javascript 脚本文件，位于 <code>site</code> 目录下面。</li></ul></li><li>下载 firefox logo 图像文件 <code>firefox.png</code>，保存到 <code>images</code> 目录。</li></ul><h2 id="_1-html-基础" tabindex="-1">1 HTML 基础 <a class="header-anchor" href="#_1-html-基础" aria-label="Permalink to &quot;1 HTML 基础&quot;">​</a></h2><p>HTML 是一种用于定义内容结构的超文本标记语言 <code>HyperText Markup Language</code>。HTML 由一系列的元素 <code>element</code> 组成，这些元素可以用来包围不同部分的内容，使其以某种方式呈现或者工作。一对标签 <code>tag</code> 可以为一段文字或者一张图片添加超链接，将文字设置为斜体，改变字号，等等。</p><h3 id="_1-1-html-文档框架" tabindex="-1">1.1 html 文档框架 <a class="header-anchor" href="#_1-1-html-文档框架" aria-label="Permalink to &quot;1.1 html 文档框架&quot;">​</a></h3><ul><li>打开 google chrome，启动 devtools</li><li>点击 <code>sources</code>, 将<code>site</code> 文件夹添加到工作区</li><li>新建文件 template.html</li></ul><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;!</span><span style="color:#F07178;">DOCTYPE</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">en-US</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">charset</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width=device-width</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">welcome MDN</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li><code>&lt;!DOCTYPE html&gt;</code>: 文档类型。</li><li><code>&lt;html&gt;&lt;/html&gt;</code>: <code>&lt;html&gt;</code> 元素。该元素包含整个页面的内容，也称作根元素。<br><code>lang=&quot;en-US&quot;</code> 指定页面语言为英文，如果为中文 <code>lang=&quot;zh-CN&quot;</code></li><li><code>&lt;head&gt;&lt;/head&gt;</code>: <code>&lt;head&gt;</code> 元素。该元素的内容对用户不可见，其中包含例如面向搜索引擎的搜索关键字（keywords）、页面描述、CSS 样式表和字符编码声明等。</li><li><code>&lt;meta charset=&quot;utf-8&quot;&gt;</code>: 指定文档使用 <code>UTF-8</code> 字符编码，<code>UTF-8</code> 包括绝大多数人类已知语言的字符。</li><li><code>&lt;title&gt;&lt;/title&gt;</code>: <code>&lt;title&gt;</code> 元素。该元素设置页面的标题，显示在浏览器标签页上，也作为收藏网页的描述文字。</li><li><code>&lt;body&gt;&lt;/body&gt;</code>: <code>&lt;body&gt;</code> 元素。该元素包含期望让用户在访问页面时看到的内容，包括文本、图像、视频、游戏、可播放的音轨或其他内容。</li></ul><h3 id="_1-2-html-元素" tabindex="-1">1.2 html 元素 <a class="header-anchor" href="#_1-2-html-元素" aria-label="Permalink to &quot;1.2 html 元素&quot;">​</a></h3><h4 id="p-paragraphs-段落" tabindex="-1"><code>&lt;p&gt;</code> Paragraphs 段落 <a class="header-anchor" href="#p-paragraphs-段落" aria-label="Permalink to &quot;\`&lt;p&gt;\` Paragraphs 段落&quot;">​</a></h4><p>一段文字由 <code>&lt;p&gt;&lt;/p&gt;</code> 标签封装形成段落<br><code>&lt;p&gt;My cat is very grumpy&lt;/p&gt;</code><br><img src="https://silenthunter0814.github.io/pub/web/tag.png" alt=""></p><p>这个元素的主要部分有：</p><ul><li>开始标签（Opening tag）：包含元素的名称（本例为 p），被大于号、小于号所包围。表示元素从这里开始或者开始起作用 —— 在本例中即段落由此开始。</li><li>结束标签（Closing tag）：与开始标签相似，只是其在元素名之前包含了一个斜杠。这表示着元素的结尾 —— 在本例中即段落在此结束。</li><li>内容（Content）：元素的内容，本例中就是所输入的文本本身。</li><li>元素（Element）：开始标签、结束标签与内容相结合，便是一个完整的元素。</li></ul><p>元素也可以有属性 (Attribute)：<br><img src="https://silenthunter0814.github.io/pub/web/attribute.png" alt=""></p><p>属性包含了关于元素的一些额外信息，这些信息本身不应显现在内容中。本例中，class 是属性名称，editor-note 是属性的值。class 属性可为元素提供一个标识名称，以便进一步为元素指定样式或进行其他操作时使用。</p><p>属性应该包含：</p><ul><li>在属性与元素名称（或上一个属性，如果有超过一个属性的话）之间的空格符。</li><li>属性的名称，并接上一个等号。</li><li>由引号所包围的属性值。</li></ul><h3 id="嵌套元素" tabindex="-1">嵌套元素 <a class="header-anchor" href="#嵌套元素" aria-label="Permalink to &quot;嵌套元素&quot;">​</a></h3><p>将一个元素置于其他元素之中称作嵌套。</p><p><code>&lt;p&gt;My cat is &lt;strong&gt;very&lt;/strong&gt; grumpy.&lt;/p&gt;</code></p><p>元素必须正确地开始和结束，才能清楚地显示出正确的嵌套层次。</p><h3 id="img-image-图像" tabindex="-1"><code>&lt;img&gt;</code> image 图像 <a class="header-anchor" href="#img-image-图像" aria-label="Permalink to &quot;\`&lt;img&gt;\` image 图像&quot;">​</a></h3><p><code>&lt;img&gt;</code> 元素通过包含图像文件路径的地址属性 src，可在所在位置嵌入图像。</p><p><code>&lt;img src=&quot;images/firefox.png&quot; alt=&quot;firefox logo&quot; /&gt;</code></p><p>替换文字属性 <code>alt</code> 是图像的文字描述，用于当图像不能被用户看见时显示。</p><div class="info custom-block"><p class="custom-block-title">空元素 Void elements</p><p><code>&lt;img&gt;</code> 元素包含两个属性，但是并没有 <code>&lt;/img&gt;</code> 结束标签，元素里也没有内容。这是因为图像元素不需要通过内容来产生效果，它的作用是向其所在的位置嵌入一个图像。</p><p>换行或硬回车 <code>&lt;br /&gt;</code> 也是空元素。</p></div>`,27),n=[o];function p(c,r,i,d,g,D){return e(),l("div",null,n)}const u=s(t,[["render",p]]);export{F as __pageData,u as default};
